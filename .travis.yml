language: cpp
dist: bionic
compiler:
  - clang
  - gcc
os:
  - linux
  - osx
cache:
  directories:
    - $HOME/.cache/pip
before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log
before_install:
  # pip is annoying on osx and the coverage tool can't parse clang's output, so only run it on linux gcc
  - if [ $TRAVIS_OS_NAME == linux -a $CC == gcc ]; then GEN_COVERAGE=1; fi
  - APP_TEST_NAME=asar-tests/asar-app-test DLL_TEST_NAME=asar-tests/asar-dll-test
  - if [ $TRAVIS_OS_NAME == linux -a $COMPILER == i686-w64-mingw32-gcc ]; then GEN_COVERAGE=1 CMAKE_EXTRA_OPTS="-DCMAKE_TOOLCHAIN_FILE=../cmake/mingw-x86.cmake" APP_TEST_NAME="wine asar-tests/asar-app-test.exe" DLL_TEST_NAME="wine asar-tests/asar-dll-test.exe"; fi
  - if [ $TRAVIS_OS_NAME == linux -a $COMPILER == x86_64-w64-mingw32-gcc ]; then GEN_COVERAGE=1 CMAKE_EXTRA_OPTS="-DCMAKE_TOOLCHAIN_FILE=../cmake/mingw-x64.cmake" APP_TEST_NAME="wine asar-tests/asar-app-test.exe" DLL_TEST_NAME="wine asar-tests/asar-dll-test.exe"; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then LIB_SUFFIX=dylib; elif [ $EXE_SUFFIX == ".exe" ]; then LIB_SUFFIX=dll; else LIB_SUFFIX=so; fi
  - if [ $GEN_COVERAGE ]; then pip install --user cpp-coveralls; CMAKE_EXTRA_OPTS="$CMAKE_EXTRA_OPTS -DASAR_COVERAGE=ON"; fi
install: # misc setup that I didn't want to put in script
  - mkdir build tests_dll_tmp tests_app_tmp
  - cd build
script:
  - cmake -DCMAKE_BUILD_TYPE=Debug $CMAKE_EXTRA_OPTS ../src
  - make
  # run dll test suite
  # We need to pass the DLL path as an absolute path because it is used to calculate the std defines location, which will throw a warning when it's a relative path
  - $DLL_TEST_NAME $TRAVIS_BUILD_DIR/build/asar/libasar.$LIB_SUFFIX $TRAVIS_BUILD_DIR/tests ../dummy_rom.sfc $TRAVIS_BUILD_DIR/tests_dll_tmp
  # run app test suite
  - $APP_TEST_NAME asar/asar-standalone$EXE_SUFFIX $TRAVIS_BUILD_DIR/tests ../dummy_rom.sfc $TRAVIS_BUILD_DIR/tests_app_tmp
after_success:
  - cd ..
  - if [ $GEN_COVERAGE ]; then lcov -c -d build -o coverage.info; coveralls --verbose --include src/asar --lcov-file coverage.info; fi
  # upload binaries to FTP server (only if not a PR and on master branch)
  - |
      if [ $TRAVIS_PULL_REQUEST == false -a $TRAVIS_BRANCH == master ]; then
        cd build/asar
        echo '4M4CEX+TZ7U6K+6sZTIkWIXdkRwI3M0XDTDJwFcBv6NvEL48yvleSRuqiQbHy2e8Z
        q19T52P1lvRT90sTZY/nLUyBdv3vpUGDQXRlkJNs7Fe6keX5u3z+rB5vIZGGOTO46Tzb6IM
        Gjtxp40lXzXLzn25qu9FyslfSyJPomG77Dz+4wy3kUtQF+YX9cYZqpP4/Y74sslPmJBJCRI
        TCcYkrwbv6NpB7NJ/oaGU06BWcr56mN46PAQTomHoWuJAwb1rQrzOupfqitBJ1dBUPSBNNu
        YgMgFBvo018MBAjFSMS8/EJL6ZWuFIK/yXV5EwMdBXeo4oEa/1mkFt16nu6EfkRSYVkdxNY
        BbpAsUPyphRIM3dKs3sL55834Hlr86MrhnSh0ouMbV4umw57cDz7udnCVR3M+H3BW0iFFfW
        qQuzVxlju0scAl/nRzgM8yL4hX6gh00M+TEWTZCSS0rt+mxL3XjUxPXc0JadFi0lW2/JS6B
        pt+AIS3c3gAc0I30hoULYED+Z8zY8atFndO5F1LYVug==' | tr -d " " | base64 --decode | openssl aes-256-cbc -K $encrypted_3f2dabfde256_key -iv $encrypted_3f2dabfde256_iv -out ssh_key -d
        chmod 600 ssh_key
        rsync -e "ssh -o StrictHostKeyChecking=off -i ssh_key" asar-standalone$EXE_SUFFIX libasar.$LIB_SUFFIX asar_ftp@random.muncher.se:/var/ftp/asar/$TRAVIS_OS_NAME/$TRAVIS_COMPILER
      fi
addons:
  apt:
    packages:
      - lcov

# MinGW cross-builds (make only)
jobs:
  include:
    - os: linux
      compiler: i686-w64-mingw32-gcc
      env:
        - COMPILER=i686-w64-mingw32-gcc # $CC will overwritten by Travis.
        - EXE_SUFFIX=.exe
      addons:
        apt:
          packages:
            - binutils-mingw-w64-i686
            - gcc-mingw-w64-i686
            - g++-mingw-w64-i686
            - lcov
            - wine32
            - wine-stable
    - os: linux
      compiler: x86_64-w64-mingw32-gcc
      env:
        - COMPILER=x86_64-w64-mingw32-gcc # $CC will overwritten by Travis.
        - EXE_SUFFIX=.exe
      addons:
        apt:
          packages:
            - binutils-mingw-w64-x86-64
            - gcc-mingw-w64-x86-64
            - g++-mingw-w64-x86-64
            - lcov
            - wine64
            - wine-stable
