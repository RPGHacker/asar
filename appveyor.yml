version: '{build}'
image: Visual Studio 2017
environment:
  matrix:
    - CMAKE_TARGET: "MinGW Makefiles"
      CMAKE_MAKE_PATH: "-DCMAKE_MAKE_PROGRAM=C:/mingw-w64/x86_64-7.2.0-posix-seh-rt_v5-rev1/mingw64/bin/mingw32-make.exe"
      CMAKE_GCC_PATH: "-DCMAKE_C_COMPILER=C:/mingw-w64/x86_64-7.2.0-posix-seh-rt_v5-rev1/mingw64/bin/x86_64-w64-mingw32-gcc.exe"
      CMAKE_GXX_PATH: "-DCMAKE_CXX_COMPILER=C:/mingw-w64/x86_64-7.2.0-posix-seh-rt_v5-rev1/mingw64/bin/x86_64-w64-mingw32-g++.exe"
    - CMAKE_TARGET: "Visual Studio 14 2015"
      PLATFORM: "Win32"
    - CMAKE_TARGET: "Visual Studio 14 2015 Win64"
      PLATFORM: "x64"
    - CMAKE_TARGET: "Visual Studio 15 2017"
      PLATFORM: "Win32"
    - CMAKE_TARGET: "Visual Studio 15 2017 Win64"
      PLATFORM: "x64"

install:
- cmd: >-
    mkdir build tests_tmp_dll tests_tmp_app

    cd build

    set PATH=C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64\bin;%PATH%

    cmake %CMAKE_MAKE_PATH% %CMAKE_GCC_PATH% %CMAKE_GXX_PATH% -G "%CMAKE_TARGET%" ..\src

build:
  verbosity: minimal

artifacts:
- path: build\asar\MinSizeRel\asar-standalone.exe
- path: build\asar\MinSizeRel\asar.dll

configuration: MinSizeRel

test_script:
  # We need to pass the DLL path as an absolute path because it is used to calculate the std defines location, which will throw a warning when it's a relative path
  - cmd: >-
      asar-tests\MinSizeRel\asar-dll-test.exe %APPVEYOR_BUILD_FOLDER%\build\asar\MinSizeRel\asar.dll %APPVEYOR_BUILD_FOLDER%\tests ..\dummy_rom.sfc %APPVEYOR_BUILD_FOLDER%\tests_tmp_dll

      asar-tests\MinSizeRel\asar-app-test.exe asar\MinSizeRel\asar-standalone.exe %APPVEYOR_BUILD_FOLDER%\tests ..\dummy_rom.sfc %APPVEYOR_BUILD_FOLDER%\tests_tmp_app

for:
-
  matrix:
    only:
      - CMAKE_TARGET: "MinGW Makefiles"

  build_script:
  - cmd: >-
      dir /a-d /b /s

      C:/mingw-w64/x86_64-7.2.0-posix-seh-rt_v5-rev1/mingw64/bin/mingw32-make.exe
